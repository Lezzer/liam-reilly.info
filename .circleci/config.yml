# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/code/
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: npm i
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: generate zip file variable name
          command: |
            echo 'export ZIP_FILE_NAME=liam-reilly.info-${CIRCLE_SHA1}.zip' >> $BASH_ENV
            source $BASH_ENV
      - run: echo ${ZIP_FILE_NAME}
      - run: 
          name: build the code 
          command: npm run build
      - run:
          name: create project zip
          command: zip -r9 liam-reilly.info.zip ./dist/ ./package.json ./package-lock.json
      - persist_to_workspace:
          root: /home/circleci/code
          paths:
            - ./liam-reilly.info.zip
  test:
    docker:
      - image: circleci/node:10

    working_directory: ~/code/
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: npm i
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm run tests
             
  deploy:
    docker:
      - image: circleci/python:jessie-node
      
    working_directory: ~/code/
    steps:
      - attach_workspace:
          at: /home/circleci/code
      - run:
          name: generate zip file variable name
          command: |
            echo 'export ZIP_FILE_NAME=liam-reilly.info-${CIRCLE_SHA1}.zip' >> $BASH_ENV
            echo 'export SOURCE_LABEL=liam-reilly.info-source-${CIRCLE_SHA1}' >> $BASH_ENV
            source $BASH_ENV
      - run: echo ${ZIP_FILE_NAME}          
      - run: echo ${SOURCE_LABEL}          
      - run:
          name: install awscli
          command: sudo pip install awscli
      - run:
          name: deploy to S3
          command: aws s3 cp liam-reilly.info.zip s3://elasticbeanstalk-eu-west-2-701350138046/liam-reilly.info.zip
      - run:
          name: create application version
          command: aws elasticbeanstalk --application-name "liam.reilly-info" --version-label liam-reilly.info-source.zip --source-bundle S3Bucket="elasticbeanstalk-eu-west-2-701350138046",S3Key=liam-reilly.info-source.zip
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test
      - deploy:
          requires:
            - build
            - test
        


